// How to test:
// java -cp build/classes/main -Djava.library.path=. Calculator

/*
** For patscc
*/
//
GCC = "gcc"
//
JAVA_HOME = System.getenv('JAVA_HOME')
//
PATSHOME = System.getenv('PATSHOME')
PATSHOMERELOC = System.getenv('PATSHOMERELOC')
//
PATSCC = "${PATSHOME}/bin/patscc"
PATSOPT = "${PATSHOME}/bin/patsopt"
//
INCLUDE = "-I${PATSHOME} -I${PATSHOME}/ccomp/runtime"
JNIincl = "${JAVA_HOME}/include"
//
/* ****** ****** */

apply plugin: 'java'
apply plugin: 'eclipse' // Provides tasks for creating an Eclipse project
apply plugin: 'idea' // '' for creating an IntelliJ project

/* ****** ****** */

task \
Calculator_dats_o \
(
  type: MyExternTask
) {
  inputs.file file("Calculator_controller.dats")
  outputs.file file("Calculator_controller_dats.o")
  mycmdln = 
  "${PATSCC} -D_GNU_SOURCE -DATS_MEMALLOC_LIBC -fPIC " +
  "${INCLUDE} -IIATS ${PATSHOMERELOC}/contrib -I${JNIincl} -c Calculator_controller.dats"
} // end of [Calculator_dats_o]

/* ****** ****** */

task \
libCalculator_dats_so \
(
  type: MyExternTask
) {
  inputs.file file("Calculator_controller_dats.o")
  outputs.file file("libCalculator_dats.so")
  mycmdln = "${GCC} -shared -o libCalculator_dats.so -Wl,-soname,libCalculator_dats.so Calculator_controller_dats.o -ldl"
} // end of [libCalculator_dats_so]

/* ****** ****** */

Calculator_dats_o.dependsOn build
libCalculator_dats_so.dependsOn Calculator_dats_o

/* ****** ****** */

task buildall \
{
  dependsOn libCalculator_dats_so
}

/* ****** ****** */

class \
MyExternTask
extends DefaultTask
{
//
def mycmdln
//
@TaskAction
def myrun()
{
  project.exec
  { 
    commandLine = mycmdln.split().toList()
  }
}
//
} // end of [Calculator_dats_o]

/* ****** ****** */

clean{
  FileTree tree = fileTree(dir: '.')
  tree.include('*_dats.c')
  tree.include('*.o')
  tree.each {File file ->
    delete file
  }

}

/* ****** ****** */

/* end of [build.gradle] */
